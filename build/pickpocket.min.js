var pickpocket=function(t){var r={};function a(n){if(r[n])return r[n].exports;var e=r[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,a),e.l=!0,e.exports}return a.m=t,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="",a(a.s="./dist/index.js")}({"./dist/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\'strict\'; // SimpleCollection\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nvar PickPocket = function PickPocket() {\n  this.data = {};\n  /**\n   * Determine if there are items within any data field\n   * @returns {boolean}\n   */\n\n  this.any = function () {\n    var isEmpty = function isEmpty(value) {\n      return [value === null || value === \'\', Array.isArray(value) && value.length === 0, _typeof(value) === \'object\' && Object.keys(value).length === 0].includes(true);\n    };\n\n    return !isEmpty(this.list());\n  };\n  /**\n   * Determine if data field has any items.\n   */\n\n\n  this.has = function (field) {\n    return Object.keys(this.data).includes(field) && this.data[field].length > 0;\n  };\n  /**\n   * Get all data\n   */\n\n\n  this.all = function () {\n    return this.data;\n  };\n  /**\n   * Array of items for every data field\n   */\n\n\n  this.list = function () {\n    var _this = this;\n\n    var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return field ? this.data[field] : Object.keys(this.data).map(function (field) {\n      return _this.data[field];\n    }).reduce(function (items, messages) {\n      return [].concat(_toConsumableArray(items), _toConsumableArray(messages));\n    }, []);\n  };\n  /**\n   * Get the data fields first item if it exists\n   */\n\n\n  this.get = function (field) {\n    if (this.has(field)) {\n      return this.data[field][0];\n    }\n  };\n  /**\n   * Add an item to a given data field\n   * @param field\n   * @param item\n   */\n\n\n  this.add = function (field, item) {\n    this.data[field] = Array.isArray(this.data[field]) ? this.data[field] : [];\n    this.data[field] = [].concat(_toConsumableArray(this.data[field]), [item]);\n  };\n  /**\n   * Set data\n   * OR\n   * Set items on specific data field\n   */\n\n\n  this.set = function (fieldOrData) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (_typeof(fieldOrData) === \'object\') {\n      this.data = fieldOrData;\n    } else {\n      this.data[fieldOrData] = value;\n    }\n  };\n  /**\n   * Forget all data fields\n   * OR\n   * Forget items on a specific data field\n   */\n\n\n  this.forget = function (field) {\n    if (typeof field === \'undefined\') {\n      this.data = {};\n    } else {\n      this.data[field] = [];\n    }\n  };\n};\n\nvar pickpocket = function pickpocket() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var pocket = new PickPocket();\n  pocket.set(data);\n  return pocket;\n};\n\nmodule.exports = pickpocket;\nmodule.exports["default"] = pickpocket;\nmodule.exports.pickpocket = pickpocket;\nmodule.exports.PickPocket = PickPocket;\n\n//# sourceURL=webpack://pickpocket/./dist/index.js?')}});